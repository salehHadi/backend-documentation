openapi: 3.0.0
info:
  title:  learn express and swagger - Learn Code Online
  description: LCO - a course segment bout writting ocs
  version: 1.1.0
  contact: 
    email: sasa97977s@hotmail.com
    url: "https://github.com/salehHadi?tab=repositories"

# servers:
#   - url: "https://localhost:4000/api/v1"
#     description: for localhost - secure
#   - url: "http://localhost:4000/api/v1"
#     description: for localhost - regular

servers:
  - url: "{protocal}://localhost:4000/api/{version}"
    description: for localhost
    variables: 
      version:
        enum:
          - v1
          - v2
        default: v1
      protocal:
        enum:
          - http
          - https
        default: http


components:
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: anything
    BearerAuth:
      type: http
      scheme: bearer

paths:
  /lco:
    get:
      tags:
        - String
      summary: Return a greeting message from LCO
      responses:
        200: # status code
          description: All good & success
          content:
            application/json:
             schema:
              type: string
              example: " mystring"
        400:
          description: Bad request
        500:
          description: internel service error


  /lcoobject:
    get:
      tags:
        - Object
      summary: Return a unique course
      responses:
        200: # status code
          description: All good & success
          content:
            application/json:
             schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
        400:
          description: Bad request
        500:
          description: internel service error



  /courses:
    get:
      tags:
        - Array
      summary: Return All courses
      responses:
        200: # status code
          description: All good & success
          content:
            application/json:
             schema:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: string
                  name:
                    type: string
                  price:
                    type: number
        400:
          description: Bad request
        500:
          description: internel service error


  /mycourse/{courseID}:
    get:
      tags:
        - String
      summary: Return course baised on request id
      parameters:
        - name: courseID
          in: path
          required: true
          default: 22
          schema:
            type: string
      responses:
        200: # status code
          description: All good & success
          content:
            application/json:
             schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
        400:
          description: Bad request
        500:
          description: internel service error



  /addCourse:
    post:
      tags:
        - String
      summary: adds new cours to exsisting courses
      consume:
        - application/json
      produces:
        - application/json
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                name:
                  type: string
                price:
                  type: number
      responses:
        200: # status code
          description: All good & success
          content:
            application/json:
             schema:
              type: boolean
        400:
          description: Bad request
        500:
          description: internel service error


    
  /coursequery:
    get:
      tags:
        - String
      summary: trying to learn about query
      parameters:
        - name: location
          in: query
          required: true
          schema:
            type: string
            enum: [dehli, london, jaipur]
        - name: device
          in: query
          required: true
          schema:
            type: string
            enum: [web, mobile]
      responses:
        200: # status code
          description: All good & success
          content:
            application/json:
             schema:
              type: object
              properties:
                location:
                  type: string
                device:
                  type: string
        400:
          description: Bad request
        500:
          description: internel service error
  
  
  /courseuplode:
    post:
      tags:
        - String
      summary: uploding course img
      parameters: 
        - in: header
          name: auth
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        200: # status code
          description: All good & success
        400:
          description: Bad request
        500:
          description: internel service error